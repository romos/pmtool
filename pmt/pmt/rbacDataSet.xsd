<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="rbacDataSet" targetNamespace="http://tempuri.org/rbacDataSet.xsd" xmlns:mstns="http://tempuri.org/rbacDataSet.xsd" xmlns="http://tempuri.org/rbacDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.pmt.Properties.Settings.GlobalReference.Default.C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ActionTableAdapter" GeneratorDataComponentClassName="ActionTableAdapter" Name="Action" UserDataComponentName="ActionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Action" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Action] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Action] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Action WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Action</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Action] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM Action WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Action" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ActiveRoleTableAdapter" GeneratorDataComponentClassName="ActiveRoleTableAdapter" Name="ActiveRole" UserDataComponentName="ActiveRoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.ActiveRole" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ActiveRole] WHERE (([Session_Id] = @Original_Session_Id) AND ([Role_Id] = @Original_Role_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Session_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Session_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ActiveRole] ([Session_Id], [Role_Id]) VALUES (@Session_Id, @Role_Id);
SELECT Session_Id, Role_Id FROM ActiveRole WHERE (Role_Id = @Role_Id) AND (Session_Id = @Session_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Session_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Session_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Session_Id, Role_Id FROM dbo.ActiveRole</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ActiveRole] SET [Session_Id] = @Session_Id, [Role_Id] = @Role_Id WHERE (([Session_Id] = @Original_Session_Id) AND ([Role_Id] = @Original_Role_Id));
SELECT Session_Id, Role_Id FROM ActiveRole WHERE (Role_Id = @Role_Id) AND (Session_Id = @Session_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Session_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Session_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Session_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Session_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Session_Id" DataSetColumn="Session_Id" />
              <Mapping SourceColumn="Role_Id" DataSetColumn="Role_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AuthUserRoleTableAdapter" GeneratorDataComponentClassName="AuthUserRoleTableAdapter" Name="AuthUserRole" UserDataComponentName="AuthUserRoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.AuthUserRole" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AuthUserRole] WHERE (([User_Id] = @Original_User_Id) AND ([Role_Id] = @Original_Role_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AuthUserRole] ([User_Id], [Role_Id]) VALUES (@User_Id, @Role_Id);
SELECT User_Id, Role_Id FROM AuthUserRole WHERE (Role_Id = @Role_Id) AND (User_Id = @User_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT User_Id, Role_Id FROM dbo.AuthUserRole</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AuthUserRole] SET [User_Id] = @User_Id, [Role_Id] = @Role_Id WHERE (([User_Id] = @Original_User_Id) AND ([Role_Id] = @Original_Role_Id));
SELECT User_Id, Role_Id FROM AuthUserRole WHERE (Role_Id = @Role_Id) AND (User_Id = @User_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="User_Id" DataSetColumn="User_Id" />
              <Mapping SourceColumn="Role_Id" DataSetColumn="Role_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DynamicSODTableAdapter" GeneratorDataComponentClassName="DynamicSODTableAdapter" Name="DynamicSOD" UserDataComponentName="DynamicSODTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.DynamicSOD" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DynamicSOD] WHERE (([Role_Id] = @Original_Role_Id) AND ([ExclusiveRole_Id] = @Original_ExclusiveRole_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DynamicSOD] ([Role_Id], [ExclusiveRole_Id]) VALUES (@Role_Id, @ExclusiveRole_Id);
SELECT Role_Id, ExclusiveRole_Id FROM DynamicSOD WHERE (ExclusiveRole_Id = @ExclusiveRole_Id) AND (Role_Id = @Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Role_Id, ExclusiveRole_Id FROM dbo.DynamicSOD</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DynamicSOD] SET [Role_Id] = @Role_Id, [ExclusiveRole_Id] = @ExclusiveRole_Id WHERE (([Role_Id] = @Original_Role_Id) AND ([ExclusiveRole_Id] = @Original_ExclusiveRole_Id));
SELECT Role_Id, ExclusiveRole_Id FROM DynamicSOD WHERE (ExclusiveRole_Id = @ExclusiveRole_Id) AND (Role_Id = @Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Role_Id" DataSetColumn="Role_Id" />
              <Mapping SourceColumn="ExclusiveRole_Id" DataSetColumn="ExclusiveRole_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ObjectTableAdapter" GeneratorDataComponentClassName="ObjectTableAdapter" Name="Object" UserDataComponentName="ObjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Object" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Object] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Object] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Object WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Object</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Object] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM Object WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Object" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionTableAdapter" GeneratorDataComponentClassName="PermissionTableAdapter" Name="Permission" UserDataComponentName="PermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Permission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Permission] WHERE (([Id] = @Original_Id) AND ([Policy_Id] = @Original_Policy_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Permission] ([Name], [Policy_Id]) VALUES (@Name, @Policy_Id);
SELECT Id, Name, Policy_Id FROM Permission WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Policy_Id FROM dbo.Permission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Permission] SET [Name] = @Name, [Policy_Id] = @Policy_Id WHERE (([Id] = @Original_Id) AND ([Policy_Id] = @Original_Policy_Id));
SELECT Id, Name, Policy_Id FROM Permission WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Permission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Policy_Id" DataSetColumn="Policy_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionPerObjectTableAdapter" GeneratorDataComponentClassName="PermissionPerObjectTableAdapter" Name="PermissionPerObject" UserDataComponentName="PermissionPerObjectTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.PermissionPerObject" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PermissionPerObject] WHERE (([Object_Id] = @Original_Object_Id) AND ([Action_Id] = @Original_Action_Id) AND ([Permission_Id] = @Original_Permission_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Object_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Object_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Action_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Action_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PermissionPerObject] ([Object_Id], [Action_Id], [Permission_Id]) VALUES (@Object_Id, @Action_Id, @Permission_Id);
SELECT Object_Id, Action_Id, Permission_Id FROM PermissionPerObject WHERE (Action_Id = @Action_Id) AND (Object_Id = @Object_Id) AND (Permission_Id = @Permission_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Object_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Object_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Action_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Action_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Object_Id, Action_Id, Permission_Id FROM dbo.PermissionPerObject</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PermissionPerObject] SET [Object_Id] = @Object_Id, [Action_Id] = @Action_Id, [Permission_Id] = @Permission_Id WHERE (([Object_Id] = @Original_Object_Id) AND ([Action_Id] = @Original_Action_Id) AND ([Permission_Id] = @Original_Permission_Id));
SELECT Object_Id, Action_Id, Permission_Id FROM PermissionPerObject WHERE (Action_Id = @Action_Id) AND (Object_Id = @Object_Id) AND (Permission_Id = @Permission_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Object_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Object_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Action_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Action_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Object_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Object_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Action_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Action_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Object_Id" DataSetColumn="Object_Id" />
              <Mapping SourceColumn="Action_Id" DataSetColumn="Action_Id" />
              <Mapping SourceColumn="Permission_Id" DataSetColumn="Permission_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PolicyTableAdapter" GeneratorDataComponentClassName="PolicyTableAdapter" Name="Policy" UserDataComponentName="PolicyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Policy" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Policy] WHERE (([Id] = @Original_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Policy] ([Name]) VALUES (@Name);
SELECT Id, Name FROM Policy WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name FROM dbo.Policy</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Policy] SET [Name] = @Name WHERE (([Id] = @Original_Id));
SELECT Id, Name FROM Policy WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Policy" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleTableAdapter" GeneratorDataComponentClassName="RoleTableAdapter" Name="Role" UserDataComponentName="RoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Role] WHERE (([Id] = @Original_Id) AND ((@IsNull_Cardinality = 1 AND [Cardinality] IS NULL) OR ([Cardinality] = @Original_Cardinality)) AND ([Policy_Id] = @Original_Policy_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cardinality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cardinality" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cardinality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cardinality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Role] ([Name], [Cardinality], [Policy_Id]) VALUES (@Name, @Cardinality, @Policy_Id);
SELECT Id, Name, Cardinality, Policy_Id FROM Role WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cardinality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cardinality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Cardinality, Policy_Id FROM dbo.Role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Role] SET [Name] = @Name, [Cardinality] = @Cardinality, [Policy_Id] = @Policy_Id WHERE (([Id] = @Original_Id) AND ((@IsNull_Cardinality = 1 AND [Cardinality] IS NULL) OR ([Cardinality] = @Original_Cardinality)) AND ([Policy_Id] = @Original_Policy_Id));
SELECT Id, Name, Cardinality, Policy_Id FROM Role WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cardinality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cardinality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cardinality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cardinality" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cardinality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cardinality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Cardinality" DataSetColumn="Cardinality" />
              <Mapping SourceColumn="Policy_Id" DataSetColumn="Policy_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleHierarchyTableAdapter" GeneratorDataComponentClassName="RoleHierarchyTableAdapter" Name="RoleHierarchy" UserDataComponentName="RoleHierarchyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.RoleHierarchy" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RoleHierarchy] WHERE (([ParentRole_Id] = @Original_ParentRole_Id) AND ([ChildRole_Id] = @Original_ChildRole_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ParentRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ChildRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ChildRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RoleHierarchy] ([ParentRole_Id], [ChildRole_Id]) VALUES (@ParentRole_Id, @ChildRole_Id);
SELECT ParentRole_Id, ChildRole_Id FROM RoleHierarchy WHERE (ChildRole_Id = @ChildRole_Id) AND (ParentRole_Id = @ParentRole_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ParentRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ChildRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ChildRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ParentRole_Id, ChildRole_Id FROM dbo.RoleHierarchy</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RoleHierarchy] SET [ParentRole_Id] = @ParentRole_Id, [ChildRole_Id] = @ChildRole_Id WHERE (([ParentRole_Id] = @Original_ParentRole_Id) AND ([ChildRole_Id] = @Original_ChildRole_Id));
SELECT ParentRole_Id, ChildRole_Id FROM RoleHierarchy WHERE (ChildRole_Id = @ChildRole_Id) AND (ParentRole_Id = @ParentRole_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ParentRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ChildRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ChildRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ParentRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ParentRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ChildRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ChildRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ParentRole_Id" DataSetColumn="SeniorRole_Id" />
              <Mapping SourceColumn="ChildRole_Id" DataSetColumn="JuniorRole_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolePermissionTableAdapter" GeneratorDataComponentClassName="RolePermissionTableAdapter" Name="RolePermission" UserDataComponentName="RolePermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.RolePermission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RolePermission] WHERE (([Role_Id] = @Original_Role_Id) AND ([Permission_Id] = @Original_Permission_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RolePermission] ([Role_Id], [Permission_Id]) VALUES (@Role_Id, @Permission_Id);
SELECT Role_Id, Permission_Id FROM RolePermission WHERE (Permission_Id = @Permission_Id) AND (Role_Id = @Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Role_Id, Permission_Id FROM dbo.RolePermission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RolePermission] SET [Role_Id] = @Role_Id, [Permission_Id] = @Permission_Id WHERE (([Role_Id] = @Original_Role_Id) AND ([Permission_Id] = @Original_Permission_Id));
SELECT Role_Id, Permission_Id FROM RolePermission WHERE (Permission_Id = @Permission_Id) AND (Role_Id = @Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Permission_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Permission_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Role_Id" DataSetColumn="Role_Id" />
              <Mapping SourceColumn="Permission_Id" DataSetColumn="Permission_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SessionTableAdapter" GeneratorDataComponentClassName="SessionTableAdapter" Name="Session" UserDataComponentName="SessionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Session" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Session] WHERE (([Id] = @Original_Id) AND ([User_Id] = @Original_User_Id) AND ((@IsNull_StartTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Original_StartTime)) AND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] = @Original_EndTime)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StartTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EndTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@Original_EndTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Session] ([Name], [User_Id], [StartTime], [EndTime]) VALUES (@Name, @User_Id, @StartTime, @EndTime);
SELECT Id, Name, User_Id, StartTime, EndTime FROM Session WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@EndTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, User_Id, StartTime, EndTime FROM dbo.Session</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Session] SET [Name] = @Name, [User_Id] = @User_Id, [StartTime] = @StartTime, [EndTime] = @EndTime WHERE (([Id] = @Original_Id) AND ([User_Id] = @Original_User_Id) AND ((@IsNull_StartTime = 1 AND [StartTime] IS NULL) OR ([StartTime] = @Original_StartTime)) AND ((@IsNull_EndTime = 1 AND [EndTime] IS NULL) OR ([EndTime] = @Original_EndTime)));
SELECT Id, Name, User_Id, StartTime, EndTime FROM Session WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@StartTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@EndTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_User_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="User_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_StartTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@Original_StartTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="StartTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_EndTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime2" Direction="Input" ParameterName="@Original_EndTime" Precision="0" ProviderType="DateTime2" Scale="0" Size="0" SourceColumn="EndTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.Session" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="User_Id" DataSetColumn="User_Id" />
              <Mapping SourceColumn="StartTime" DataSetColumn="StartTime" />
              <Mapping SourceColumn="EndTime" DataSetColumn="EndTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StaticSODTableAdapter" GeneratorDataComponentClassName="StaticSODTableAdapter" Name="StaticSOD" UserDataComponentName="StaticSODTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.StaticSOD" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[StaticSOD] WHERE (([Role_Id] = @Original_Role_Id) AND ([ExclusiveRole_Id] = @Original_ExclusiveRole_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[StaticSOD] ([Role_Id], [ExclusiveRole_Id]) VALUES (@Role_Id, @ExclusiveRole_Id);
SELECT Role_Id, ExclusiveRole_Id FROM StaticSOD WHERE (ExclusiveRole_Id = @ExclusiveRole_Id) AND (Role_Id = @Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Role_Id, ExclusiveRole_Id FROM dbo.StaticSOD</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[StaticSOD] SET [Role_Id] = @Role_Id, [ExclusiveRole_Id] = @ExclusiveRole_Id WHERE (([Role_Id] = @Original_Role_Id) AND ([ExclusiveRole_Id] = @Original_ExclusiveRole_Id));
SELECT Role_Id, ExclusiveRole_Id FROM StaticSOD WHERE (ExclusiveRole_Id = @ExclusiveRole_Id) AND (Role_Id = @Role_Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Role_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Role_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ExclusiveRole_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExclusiveRole_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Role_Id" DataSetColumn="Role_Id" />
              <Mapping SourceColumn="ExclusiveRole_Id" DataSetColumn="ExclusiveRole_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTableAdapter" GeneratorDataComponentClassName="UserTableAdapter" Name="User" UserDataComponentName="UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="C__MYTESTPROJECTS_MCD_DIPLOMA_PMTOOL_RBAC_MDFConnectionString (Settings)" DbObjectName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.[User]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[User] WHERE (([Id] = @Original_Id) AND ([Policy_Id] = @Original_Policy_Id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[User] ([Name], [Password], [Policy_Id]) VALUES (@Name, @Password, @Policy_Id);
SELECT Id, Name, Password, Policy_Id FROM [User] WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Password, Policy_Id FROM dbo.[User]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[User] SET [Name] = @Name, [Password] = @Password, [Policy_Id] = @Policy_Id WHERE (([Id] = @Original_Id) AND ([Policy_Id] = @Original_Policy_Id));
SELECT Id, Name, Password, Policy_Id FROM [User] WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Policy_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Policy_Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="[C:\MYTESTPROJECTS\MCD\DIPLOMA\PMTOOL\RBAC.MDF].dbo.[User]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="Policy_Id" DataSetColumn="Policy_Id" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="rbacDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="rbacDataSet" msprop:Generator_UserDSName="rbacDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Action" msprop:Generator_TableClassName="ActionDataTable" msprop:Generator_TableVarName="tableAction" msprop:Generator_RowChangedName="ActionRowChanged" msprop:Generator_TablePropName="Action" msprop:Generator_RowDeletingName="ActionRowDeleting" msprop:Generator_RowChangingName="ActionRowChanging" msprop:Generator_RowEvHandlerName="ActionRowChangeEventHandler" msprop:Generator_RowDeletedName="ActionRowDeleted" msprop:Generator_RowClassName="ActionRow" msprop:Generator_UserTableName="Action" msprop:Generator_RowEvArgName="ActionRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ActiveRole" msprop:Generator_TableClassName="ActiveRoleDataTable" msprop:Generator_TableVarName="tableActiveRole" msprop:Generator_RowChangedName="ActiveRoleRowChanged" msprop:Generator_TablePropName="ActiveRole" msprop:Generator_RowDeletingName="ActiveRoleRowDeleting" msprop:Generator_RowChangingName="ActiveRoleRowChanging" msprop:Generator_RowEvHandlerName="ActiveRoleRowChangeEventHandler" msprop:Generator_RowDeletedName="ActiveRoleRowDeleted" msprop:Generator_RowClassName="ActiveRoleRow" msprop:Generator_UserTableName="ActiveRole" msprop:Generator_RowEvArgName="ActiveRoleRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Session_Id" msprop:Generator_ColumnVarNameInTable="columnSession_Id" msprop:Generator_ColumnPropNameInRow="Session_Id" msprop:Generator_ColumnPropNameInTable="Session_IdColumn" msprop:Generator_UserColumnName="Session_Id" type="xs:int" />
              <xs:element name="Role_Id" msprop:Generator_ColumnVarNameInTable="columnRole_Id" msprop:Generator_ColumnPropNameInRow="Role_Id" msprop:Generator_ColumnPropNameInTable="Role_IdColumn" msprop:Generator_UserColumnName="Role_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AuthUserRole" msprop:Generator_TableClassName="AuthUserRoleDataTable" msprop:Generator_TableVarName="tableAuthUserRole" msprop:Generator_RowChangedName="AuthUserRoleRowChanged" msprop:Generator_TablePropName="AuthUserRole" msprop:Generator_RowDeletingName="AuthUserRoleRowDeleting" msprop:Generator_RowChangingName="AuthUserRoleRowChanging" msprop:Generator_RowEvHandlerName="AuthUserRoleRowChangeEventHandler" msprop:Generator_RowDeletedName="AuthUserRoleRowDeleted" msprop:Generator_RowClassName="AuthUserRoleRow" msprop:Generator_UserTableName="AuthUserRole" msprop:Generator_RowEvArgName="AuthUserRoleRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="User_Id" msprop:Generator_ColumnVarNameInTable="columnUser_Id" msprop:Generator_ColumnPropNameInRow="User_Id" msprop:Generator_ColumnPropNameInTable="User_IdColumn" msprop:Generator_UserColumnName="User_Id" type="xs:int" />
              <xs:element name="Role_Id" msprop:Generator_ColumnVarNameInTable="columnRole_Id" msprop:Generator_ColumnPropNameInRow="Role_Id" msprop:Generator_ColumnPropNameInTable="Role_IdColumn" msprop:Generator_UserColumnName="Role_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DynamicSOD" msprop:Generator_TableClassName="DynamicSODDataTable" msprop:Generator_TableVarName="tableDynamicSOD" msprop:Generator_RowChangedName="DynamicSODRowChanged" msprop:Generator_TablePropName="DynamicSOD" msprop:Generator_RowDeletingName="DynamicSODRowDeleting" msprop:Generator_RowChangingName="DynamicSODRowChanging" msprop:Generator_RowEvHandlerName="DynamicSODRowChangeEventHandler" msprop:Generator_RowDeletedName="DynamicSODRowDeleted" msprop:Generator_RowClassName="DynamicSODRow" msprop:Generator_UserTableName="DynamicSOD" msprop:Generator_RowEvArgName="DynamicSODRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Role_Id" msprop:Generator_ColumnVarNameInTable="columnRole_Id" msprop:Generator_ColumnPropNameInRow="Role_Id" msprop:Generator_ColumnPropNameInTable="Role_IdColumn" msprop:Generator_UserColumnName="Role_Id" type="xs:int" />
              <xs:element name="ExclusiveRole_Id" msprop:Generator_ColumnVarNameInTable="columnExclusiveRole_Id" msprop:Generator_ColumnPropNameInRow="ExclusiveRole_Id" msprop:Generator_ColumnPropNameInTable="ExclusiveRole_IdColumn" msprop:Generator_UserColumnName="ExclusiveRole_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Object" msprop:Generator_TableClassName="ObjectDataTable" msprop:Generator_TableVarName="tableObject" msprop:Generator_RowChangedName="ObjectRowChanged" msprop:Generator_TablePropName="Object" msprop:Generator_RowDeletingName="ObjectRowDeleting" msprop:Generator_RowChangingName="ObjectRowChanging" msprop:Generator_RowEvHandlerName="ObjectRowChangeEventHandler" msprop:Generator_RowDeletedName="ObjectRowDeleted" msprop:Generator_RowClassName="ObjectRow" msprop:Generator_UserTableName="Object" msprop:Generator_RowEvArgName="ObjectRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Permission" msprop:Generator_TableClassName="PermissionDataTable" msprop:Generator_TableVarName="tablePermission" msprop:Generator_RowChangedName="PermissionRowChanged" msprop:Generator_TablePropName="Permission" msprop:Generator_RowDeletingName="PermissionRowDeleting" msprop:Generator_RowChangingName="PermissionRowChanging" msprop:Generator_RowEvHandlerName="PermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="PermissionRowDeleted" msprop:Generator_RowClassName="PermissionRow" msprop:Generator_UserTableName="Permission" msprop:Generator_RowEvArgName="PermissionRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Policy_Id" msprop:Generator_ColumnVarNameInTable="columnPolicy_Id" msprop:Generator_ColumnPropNameInRow="Policy_Id" msprop:Generator_ColumnPropNameInTable="Policy_IdColumn" msprop:Generator_UserColumnName="Policy_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PermissionPerObject" msprop:Generator_TableClassName="PermissionPerObjectDataTable" msprop:Generator_TableVarName="tablePermissionPerObject" msprop:Generator_RowChangedName="PermissionPerObjectRowChanged" msprop:Generator_TablePropName="PermissionPerObject" msprop:Generator_RowDeletingName="PermissionPerObjectRowDeleting" msprop:Generator_RowChangingName="PermissionPerObjectRowChanging" msprop:Generator_RowEvHandlerName="PermissionPerObjectRowChangeEventHandler" msprop:Generator_RowDeletedName="PermissionPerObjectRowDeleted" msprop:Generator_RowClassName="PermissionPerObjectRow" msprop:Generator_UserTableName="PermissionPerObject" msprop:Generator_RowEvArgName="PermissionPerObjectRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Object_Id" msprop:Generator_ColumnVarNameInTable="columnObject_Id" msprop:Generator_ColumnPropNameInRow="Object_Id" msprop:Generator_ColumnPropNameInTable="Object_IdColumn" msprop:Generator_UserColumnName="Object_Id" type="xs:int" />
              <xs:element name="Action_Id" msprop:Generator_ColumnVarNameInTable="columnAction_Id" msprop:Generator_ColumnPropNameInRow="Action_Id" msprop:Generator_ColumnPropNameInTable="Action_IdColumn" msprop:Generator_UserColumnName="Action_Id" type="xs:int" />
              <xs:element name="Permission_Id" msprop:Generator_ColumnVarNameInTable="columnPermission_Id" msprop:Generator_ColumnPropNameInRow="Permission_Id" msprop:Generator_ColumnPropNameInTable="Permission_IdColumn" msprop:Generator_UserColumnName="Permission_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Policy" msprop:Generator_TableClassName="PolicyDataTable" msprop:Generator_TableVarName="tablePolicy" msprop:Generator_RowChangedName="PolicyRowChanged" msprop:Generator_TablePropName="Policy" msprop:Generator_RowDeletingName="PolicyRowDeleting" msprop:Generator_RowChangingName="PolicyRowChanging" msprop:Generator_RowEvHandlerName="PolicyRowChangeEventHandler" msprop:Generator_RowDeletedName="PolicyRowDeleted" msprop:Generator_RowClassName="PolicyRow" msprop:Generator_UserTableName="Policy" msprop:Generator_RowEvArgName="PolicyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Role" msprop:Generator_TableClassName="RoleDataTable" msprop:Generator_TableVarName="tableRole" msprop:Generator_RowChangedName="RoleRowChanged" msprop:Generator_TablePropName="Role" msprop:Generator_RowDeletingName="RoleRowDeleting" msprop:Generator_RowChangingName="RoleRowChanging" msprop:Generator_RowEvHandlerName="RoleRowChangeEventHandler" msprop:Generator_RowDeletedName="RoleRowDeleted" msprop:Generator_RowClassName="RoleRow" msprop:Generator_UserTableName="Role" msprop:Generator_RowEvArgName="RoleRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cardinality" msprop:Generator_ColumnVarNameInTable="columnCardinality" msprop:Generator_ColumnPropNameInRow="Cardinality" msprop:Generator_ColumnPropNameInTable="CardinalityColumn" msprop:Generator_UserColumnName="Cardinality" type="xs:int" minOccurs="0" />
              <xs:element name="Policy_Id" msprop:Generator_ColumnVarNameInTable="columnPolicy_Id" msprop:Generator_ColumnPropNameInRow="Policy_Id" msprop:Generator_ColumnPropNameInTable="Policy_IdColumn" msprop:Generator_UserColumnName="Policy_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RoleHierarchy" msprop:Generator_TableClassName="RoleHierarchyDataTable" msprop:Generator_TableVarName="tableRoleHierarchy" msprop:Generator_RowChangedName="RoleHierarchyRowChanged" msprop:Generator_TablePropName="RoleHierarchy" msprop:Generator_RowDeletingName="RoleHierarchyRowDeleting" msprop:Generator_RowChangingName="RoleHierarchyRowChanging" msprop:Generator_RowEvHandlerName="RoleHierarchyRowChangeEventHandler" msprop:Generator_RowDeletedName="RoleHierarchyRowDeleted" msprop:Generator_RowClassName="RoleHierarchyRow" msprop:Generator_UserTableName="RoleHierarchy" msprop:Generator_RowEvArgName="RoleHierarchyRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SeniorRole_Id" msprop:Generator_ColumnVarNameInTable="columnSeniorRole_Id" msprop:Generator_ColumnPropNameInRow="SeniorRole_Id" msprop:Generator_ColumnPropNameInTable="SeniorRole_IdColumn" msprop:Generator_UserColumnName="SeniorRole_Id" type="xs:int" />
              <xs:element name="JuniorRole_Id" msprop:Generator_ColumnVarNameInTable="columnJuniorRole_Id" msprop:Generator_ColumnPropNameInRow="JuniorRole_Id" msprop:Generator_ColumnPropNameInTable="JuniorRole_IdColumn" msprop:Generator_UserColumnName="JuniorRole_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RolePermission" msprop:Generator_TableClassName="RolePermissionDataTable" msprop:Generator_TableVarName="tableRolePermission" msprop:Generator_RowChangedName="RolePermissionRowChanged" msprop:Generator_TablePropName="RolePermission" msprop:Generator_RowDeletingName="RolePermissionRowDeleting" msprop:Generator_RowChangingName="RolePermissionRowChanging" msprop:Generator_RowEvHandlerName="RolePermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="RolePermissionRowDeleted" msprop:Generator_RowClassName="RolePermissionRow" msprop:Generator_UserTableName="RolePermission" msprop:Generator_RowEvArgName="RolePermissionRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Role_Id" msprop:Generator_ColumnVarNameInTable="columnRole_Id" msprop:Generator_ColumnPropNameInRow="Role_Id" msprop:Generator_ColumnPropNameInTable="Role_IdColumn" msprop:Generator_UserColumnName="Role_Id" type="xs:int" />
              <xs:element name="Permission_Id" msprop:Generator_ColumnVarNameInTable="columnPermission_Id" msprop:Generator_ColumnPropNameInRow="Permission_Id" msprop:Generator_ColumnPropNameInTable="Permission_IdColumn" msprop:Generator_UserColumnName="Permission_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Session" msprop:Generator_TableClassName="SessionDataTable" msprop:Generator_TableVarName="tableSession" msprop:Generator_RowChangedName="SessionRowChanged" msprop:Generator_TablePropName="Session" msprop:Generator_RowDeletingName="SessionRowDeleting" msprop:Generator_RowChangingName="SessionRowChanging" msprop:Generator_RowEvHandlerName="SessionRowChangeEventHandler" msprop:Generator_RowDeletedName="SessionRowDeleted" msprop:Generator_RowClassName="SessionRow" msprop:Generator_UserTableName="Session" msprop:Generator_RowEvArgName="SessionRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="User_Id" msprop:Generator_ColumnVarNameInTable="columnUser_Id" msprop:Generator_ColumnPropNameInRow="User_Id" msprop:Generator_ColumnPropNameInTable="User_IdColumn" msprop:Generator_UserColumnName="User_Id" type="xs:int" />
              <xs:element name="StartTime" msprop:Generator_ColumnVarNameInTable="columnStartTime" msprop:Generator_ColumnPropNameInRow="StartTime" msprop:Generator_ColumnPropNameInTable="StartTimeColumn" msprop:Generator_UserColumnName="StartTime" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EndTime" msprop:Generator_ColumnVarNameInTable="columnEndTime" msprop:Generator_ColumnPropNameInRow="EndTime" msprop:Generator_ColumnPropNameInTable="EndTimeColumn" msprop:Generator_UserColumnName="EndTime" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="StaticSOD" msprop:Generator_TableClassName="StaticSODDataTable" msprop:Generator_TableVarName="tableStaticSOD" msprop:Generator_RowChangedName="StaticSODRowChanged" msprop:Generator_TablePropName="StaticSOD" msprop:Generator_RowDeletingName="StaticSODRowDeleting" msprop:Generator_RowChangingName="StaticSODRowChanging" msprop:Generator_RowEvHandlerName="StaticSODRowChangeEventHandler" msprop:Generator_RowDeletedName="StaticSODRowDeleted" msprop:Generator_RowClassName="StaticSODRow" msprop:Generator_UserTableName="StaticSOD" msprop:Generator_RowEvArgName="StaticSODRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Role_Id" msprop:Generator_ColumnVarNameInTable="columnRole_Id" msprop:Generator_ColumnPropNameInRow="Role_Id" msprop:Generator_ColumnPropNameInTable="Role_IdColumn" msprop:Generator_UserColumnName="Role_Id" type="xs:int" />
              <xs:element name="ExclusiveRole_Id" msprop:Generator_ColumnVarNameInTable="columnExclusiveRole_Id" msprop:Generator_ColumnPropNameInRow="ExclusiveRole_Id" msprop:Generator_ColumnPropNameInTable="ExclusiveRole_IdColumn" msprop:Generator_UserColumnName="ExclusiveRole_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="User" msprop:Generator_TableClassName="UserDataTable" msprop:Generator_TableVarName="tableUser" msprop:Generator_RowChangedName="UserRowChanged" msprop:Generator_TablePropName="User" msprop:Generator_RowDeletingName="UserRowDeleting" msprop:Generator_RowChangingName="UserRowChanging" msprop:Generator_RowEvHandlerName="UserRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRowDeleted" msprop:Generator_RowClassName="UserRow" msprop:Generator_UserTableName="User" msprop:Generator_RowEvArgName="UserRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Policy_Id" msprop:Generator_ColumnVarNameInTable="columnPolicy_Id" msprop:Generator_ColumnPropNameInRow="Policy_Id" msprop:Generator_ColumnPropNameInTable="Policy_IdColumn" msprop:Generator_UserColumnName="Policy_Id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Action" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="ActiveRole_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ActiveRole" />
      <xs:field xpath="mstns:Session_Id" />
      <xs:field xpath="mstns:Role_Id" />
    </xs:unique>
    <xs:unique name="AuthUserRole_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AuthUserRole" />
      <xs:field xpath="mstns:User_Id" />
      <xs:field xpath="mstns:Role_Id" />
    </xs:unique>
    <xs:unique name="DynamicSOD_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DynamicSOD" />
      <xs:field xpath="mstns:Role_Id" />
      <xs:field xpath="mstns:ExclusiveRole_Id" />
    </xs:unique>
    <xs:unique name="Object_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Object" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Permission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Permission" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="PermissionPerObject_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PermissionPerObject" />
      <xs:field xpath="mstns:Object_Id" />
      <xs:field xpath="mstns:Action_Id" />
      <xs:field xpath="mstns:Permission_Id" />
    </xs:unique>
    <xs:unique name="Policy_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Policy" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Role_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Role" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="RoleHierarchy_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RoleHierarchy" />
      <xs:field xpath="mstns:SeniorRole_Id" />
      <xs:field xpath="mstns:JuniorRole_Id" />
    </xs:unique>
    <xs:unique name="RolePermission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RolePermission" />
      <xs:field xpath="mstns:Role_Id" />
      <xs:field xpath="mstns:Permission_Id" />
    </xs:unique>
    <xs:unique name="Session_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Session" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="StaticSOD_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:StaticSOD" />
      <xs:field xpath="mstns:Role_Id" />
      <xs:field xpath="mstns:ExclusiveRole_Id" />
    </xs:unique>
    <xs:unique name="User_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:User" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_ActiveRole_Role" msdata:parent="Role" msdata:child="ActiveRole" msdata:parentkey="Id" msdata:childkey="Role_Id" msprop:Generator_UserChildTable="ActiveRole" msprop:Generator_ChildPropName="GetActiveRoleRows" msprop:Generator_UserRelationName="FK_ActiveRole_Role" msprop:Generator_ParentPropName="RoleRow" msprop:Generator_RelationVarName="relationFK_ActiveRole_Role" msprop:Generator_UserParentTable="Role" />
      <msdata:Relationship name="FK_ActiveRole_Session" msdata:parent="Session" msdata:child="ActiveRole" msdata:parentkey="Id" msdata:childkey="Session_Id" msprop:Generator_UserChildTable="ActiveRole" msprop:Generator_ChildPropName="GetActiveRoleRows" msprop:Generator_UserRelationName="FK_ActiveRole_Session" msprop:Generator_ParentPropName="SessionRow" msprop:Generator_RelationVarName="relationFK_ActiveRole_Session" msprop:Generator_UserParentTable="Session" />
      <msdata:Relationship name="FK_AuthUserRole_Role" msdata:parent="Role" msdata:child="AuthUserRole" msdata:parentkey="Id" msdata:childkey="Role_Id" msprop:Generator_UserChildTable="AuthUserRole" msprop:Generator_ChildPropName="GetAuthUserRoleRows" msprop:Generator_UserRelationName="FK_AuthUserRole_Role" msprop:Generator_ParentPropName="RoleRow" msprop:Generator_RelationVarName="relationFK_AuthUserRole_Role" msprop:Generator_UserParentTable="Role" />
      <msdata:Relationship name="FK_AuthUserRole_User" msdata:parent="User" msdata:child="AuthUserRole" msdata:parentkey="Id" msdata:childkey="User_Id" msprop:Generator_UserChildTable="AuthUserRole" msprop:Generator_ChildPropName="GetAuthUserRoleRows" msprop:Generator_UserRelationName="FK_AuthUserRole_User" msprop:Generator_ParentPropName="UserRow" msprop:Generator_RelationVarName="relationFK_AuthUserRole_User" msprop:Generator_UserParentTable="User" />
      <msdata:Relationship name="FK_DynamicSOD_ExclusiveRole" msdata:parent="Role" msdata:child="DynamicSOD" msdata:parentkey="Id" msdata:childkey="ExclusiveRole_Id" msprop:Generator_UserChildTable="DynamicSOD" msprop:Generator_ChildPropName="GetDynamicSODRowsByFK_DynamicSOD_ExclusiveRole" msprop:Generator_UserRelationName="FK_DynamicSOD_ExclusiveRole" msprop:Generator_ParentPropName="RoleRowByFK_DynamicSOD_ExclusiveRole" msprop:Generator_RelationVarName="relationFK_DynamicSOD_ExclusiveRole" msprop:Generator_UserParentTable="Role" />
      <msdata:Relationship name="FK_DynamicSOD_Role" msdata:parent="Role" msdata:child="DynamicSOD" msdata:parentkey="Id" msdata:childkey="Role_Id" msprop:Generator_UserChildTable="DynamicSOD" msprop:Generator_ChildPropName="GetDynamicSODRowsByFK_DynamicSOD_Role" msprop:Generator_UserRelationName="FK_DynamicSOD_Role" msprop:Generator_ParentPropName="RoleRowByFK_DynamicSOD_Role" msprop:Generator_RelationVarName="relationFK_DynamicSOD_Role" msprop:Generator_UserParentTable="Role" />
      <msdata:Relationship name="FK_Permission_Policy" msdata:parent="Policy" msdata:child="Permission" msdata:parentkey="Id" msdata:childkey="Policy_Id" msprop:Generator_UserChildTable="Permission" msprop:Generator_ChildPropName="GetPermissionRows" msprop:Generator_UserRelationName="FK_Permission_Policy" msprop:Generator_ParentPropName="PolicyRow" msprop:Generator_RelationVarName="relationFK_Permission_Policy" msprop:Generator_UserParentTable="Policy" />
      <msdata:Relationship name="FK_PermissionPerObject_Action" msdata:parent="Action" msdata:child="PermissionPerObject" msdata:parentkey="Id" msdata:childkey="Action_Id" msprop:Generator_UserChildTable="PermissionPerObject" msprop:Generator_ChildPropName="GetPermissionPerObjectRows" msprop:Generator_UserRelationName="FK_PermissionPerObject_Action" msprop:Generator_RelationVarName="relationFK_PermissionPerObject_Action" msprop:Generator_UserParentTable="Action" msprop:Generator_ParentPropName="ActionRow" />
      <msdata:Relationship name="FK_PermissionPerObject_Object" msdata:parent="Object" msdata:child="PermissionPerObject" msdata:parentkey="Id" msdata:childkey="Object_Id" msprop:Generator_UserChildTable="PermissionPerObject" msprop:Generator_ChildPropName="GetPermissionPerObjectRows" msprop:Generator_UserRelationName="FK_PermissionPerObject_Object" msprop:Generator_RelationVarName="relationFK_PermissionPerObject_Object" msprop:Generator_UserParentTable="Object" msprop:Generator_ParentPropName="ObjectRow" />
      <msdata:Relationship name="FK_PermissionPerObject_Permission" msdata:parent="Permission" msdata:child="PermissionPerObject" msdata:parentkey="Id" msdata:childkey="Permission_Id" msprop:Generator_UserChildTable="PermissionPerObject" msprop:Generator_ChildPropName="GetPermissionPerObjectRows" msprop:Generator_UserRelationName="FK_PermissionPerObject_Permission" msprop:Generator_RelationVarName="relationFK_PermissionPerObject_Permission" msprop:Generator_UserParentTable="Permission" msprop:Generator_ParentPropName="PermissionRow" />
      <msdata:Relationship name="FK_Role_Policy" msdata:parent="Policy" msdata:child="Role" msdata:parentkey="Id" msdata:childkey="Policy_Id" msprop:Generator_UserChildTable="Role" msprop:Generator_ChildPropName="GetRoleRows" msprop:Generator_UserRelationName="FK_Role_Policy" msprop:Generator_RelationVarName="relationFK_Role_Policy" msprop:Generator_UserParentTable="Policy" msprop:Generator_ParentPropName="PolicyRow" />
      <msdata:Relationship name="FK_RoleHierarchy_ChildRole" msdata:parent="Role" msdata:child="RoleHierarchy" msdata:parentkey="Id" msdata:childkey="JuniorRole_Id" msprop:Generator_UserChildTable="RoleHierarchy" msprop:Generator_ChildPropName="GetRoleHierarchyRowsByFK_RoleHierarchy_ChildRole" msprop:Generator_UserRelationName="FK_RoleHierarchy_ChildRole" msprop:Generator_RelationVarName="relationFK_RoleHierarchy_ChildRole" msprop:Generator_UserParentTable="Role" msprop:Generator_ParentPropName="RoleRowByFK_RoleHierarchy_ChildRole" />
      <msdata:Relationship name="FK_RoleHierarchy_ParentRole" msdata:parent="Role" msdata:child="RoleHierarchy" msdata:parentkey="Id" msdata:childkey="SeniorRole_Id" msprop:Generator_UserChildTable="RoleHierarchy" msprop:Generator_ChildPropName="GetRoleHierarchyRowsByFK_RoleHierarchy_ParentRole" msprop:Generator_UserRelationName="FK_RoleHierarchy_ParentRole" msprop:Generator_RelationVarName="relationFK_RoleHierarchy_ParentRole" msprop:Generator_UserParentTable="Role" msprop:Generator_ParentPropName="RoleRowByFK_RoleHierarchy_ParentRole" />
      <msdata:Relationship name="FK_RolePermission_Permission" msdata:parent="Permission" msdata:child="RolePermission" msdata:parentkey="Id" msdata:childkey="Permission_Id" msprop:Generator_UserChildTable="RolePermission" msprop:Generator_ChildPropName="GetRolePermissionRows" msprop:Generator_UserRelationName="FK_RolePermission_Permission" msprop:Generator_RelationVarName="relationFK_RolePermission_Permission" msprop:Generator_UserParentTable="Permission" msprop:Generator_ParentPropName="PermissionRow" />
      <msdata:Relationship name="FK_RolePermission_Role" msdata:parent="Role" msdata:child="RolePermission" msdata:parentkey="Id" msdata:childkey="Role_Id" msprop:Generator_UserChildTable="RolePermission" msprop:Generator_ChildPropName="GetRolePermissionRows" msprop:Generator_UserRelationName="FK_RolePermission_Role" msprop:Generator_RelationVarName="relationFK_RolePermission_Role" msprop:Generator_UserParentTable="Role" msprop:Generator_ParentPropName="RoleRow" />
      <msdata:Relationship name="FK_Session_User" msdata:parent="User" msdata:child="Session" msdata:parentkey="Id" msdata:childkey="User_Id" msprop:Generator_UserChildTable="Session" msprop:Generator_ChildPropName="GetSessionRows" msprop:Generator_UserRelationName="FK_Session_User" msprop:Generator_ParentPropName="UserRow" msprop:Generator_RelationVarName="relationFK_Session_User" msprop:Generator_UserParentTable="User" />
      <msdata:Relationship name="FK_StaticSOD_ExclusiveRole" msdata:parent="Role" msdata:child="StaticSOD" msdata:parentkey="Id" msdata:childkey="ExclusiveRole_Id" msprop:Generator_UserChildTable="StaticSOD" msprop:Generator_ChildPropName="GetStaticSODRowsByFK_StaticSOD_ExclusiveRole" msprop:Generator_UserRelationName="FK_StaticSOD_ExclusiveRole" msprop:Generator_RelationVarName="relationFK_StaticSOD_ExclusiveRole" msprop:Generator_UserParentTable="Role" msprop:Generator_ParentPropName="RoleRowByFK_StaticSOD_ExclusiveRole" />
      <msdata:Relationship name="FK_StaticSOD_Role" msdata:parent="Role" msdata:child="StaticSOD" msdata:parentkey="Id" msdata:childkey="Role_Id" msprop:Generator_UserChildTable="StaticSOD" msprop:Generator_ChildPropName="GetStaticSODRowsByFK_StaticSOD_Role" msprop:Generator_UserRelationName="FK_StaticSOD_Role" msprop:Generator_RelationVarName="relationFK_StaticSOD_Role" msprop:Generator_UserParentTable="Role" msprop:Generator_ParentPropName="RoleRowByFK_StaticSOD_Role" />
      <msdata:Relationship name="FK_User_Policy" msdata:parent="Policy" msdata:child="User" msdata:parentkey="Id" msdata:childkey="Policy_Id" msprop:Generator_UserChildTable="User" msprop:Generator_ChildPropName="GetUserRows" msprop:Generator_UserRelationName="FK_User_Policy" msprop:Generator_RelationVarName="relationFK_User_Policy" msprop:Generator_UserParentTable="Policy" msprop:Generator_ParentPropName="PolicyRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>